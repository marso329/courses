1.1

Svar:

Ja

1.2

O(n^3) . Beroende på om matrisen är sparse/triangulär men är den ej sparse eller LU så tar invertering O(n^3) och multiplikation O(n^3)


2.1

\ : A\B = A^-1 * B

/ : B\A = B * A^-1

./ :  A och B måste ha samma dimension (eller en är en skalär) och varje enskilt elements divideras

.\ :  A och B måste ha samma dimension (eller en är en skalär) och varje enskilt elements divideras

2.2

A=[-1 2 1 ; 3 -3 3 ; 1 2 -2];
b=[2 ; 3 ; 1];
xa=A\b

xa=[1,1,1]

2.3

isequal(A*xa,b)

2.4

   inv(X) is the inverse of the square matrix X.
   
2.5

xb=inv(A)*b

2.6

xa-xb= 10^-15*[0 ; 0.111022302462516 ; 0]

xa är bäst

2.7 

x=[    1.000000000000000
   1.033333333333333
   1.033333333333333
]

2.8

A=[0 0 1 ; 1 1 0 ; 1/10 0 1]
B=[1 ; 2 ; 1.1]
x=A\B
x=[   1.000000000000001
   0.999999999999999
   1.000000000000000
]
B=[1 ; 2 ; 1]
x=A\B
x=[     0
     2
     1
]

2.9

  -Inf
   Inf
   
2.10

0.5 (minsta kvadrat metoden)

   
2.11
     1 0 (minsta kvadratmetoden) 
     
3.1
A=[-1 2 1 ; 3 -3 3 ; 1 2 -2]
[L,U,P]=lu(A)
isequal(L*U,P*A)

3.2
y=L\(P*B)

y =

     3
     0
     3
X=U\y
x= 1 1 1
isequal(X,A\B)

4.1

runtime=0.5;
elapsedtime=0.0;
n=1000;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,A\b;elapsedtime=toc;
n=n+100;
end
n=n-100;
elapsedtime=0.0;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,A\b;elapsedtime=toc;
n=n+10;
end
n=n-10;
elapsedtime=0.0;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,A\b;elapsedtime=toc;
n=n+1;
end
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])
n=n*2;
A=rand(n,n);b=rand(n,1);tic,A\b;elapsedtime=toc;
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])
n=n*2;
A=rand(n,n);b=rand(n,1);tic,A\b;elapsedtime=toc;
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])

to calculate a linear system with 2901 variables takes 0.53264 seconds
to calculate a linear system with 5802 variables takes 3.5028 seconds
to calculate a linear system with 11604 variables takes 25.194 seconds

4.2

runtime=0.5;
elapsedtime=0.0;
n=1000;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,inv(A)*b;elapsedtime=toc;
n=n+100;
end
n=n-100;
elapsedtime=0.0;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,inv(A)*b;elapsedtime=toc;
n=n+10;
end
n=n-10;
elapsedtime=0.0;
while elapsedtime<=runtime
A=rand(n,n);b=rand(n,1);tic,inv(A)*b;elapsedtime=toc;
n=n+1;
end
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])
n=n*2;
A=rand(n,n);b=rand(n,1);tic,inv(A)*b;elapsedtime=toc;
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])
n=n*2;
A=rand(n,n);b=rand(n,1);tic,inv(A)*b;elapsedtime=toc;
disp(['to calculate a linear system with ',num2str(n),' variables takes ',num2str(elapsedtime),' seconds'])

to calculate a linear system with 2101 variables takes 0.52135 seconds
to calculate a linear system with 4202 variables takes 3.7431 seconds
to calculate a linear system with 8404 variables takes 27.7428 seconds

4.3

samma

4.4

med gauss(slash):
to calculate a linear system with 8011 variables takes 0.050249 seconds
to calculate a linear system with 16022 variables takes 0.1992 seconds
to calculate a linear system with 32044 variables takes 0.93294 seconds

med inverse:
to calculate a linear system with 1001 variables takes 0.064725 seconds
to calculate a linear system with 2002 variables takes 0.44952 seconds
to calculate a linear system with 4004 variables takes 3.215 seconds

kubiskt

4.5

a) O(n)
b) O(n^2)
c) O(N^3)

