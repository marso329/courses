	;DATA TO SORT
SET	E0	92F1
SET	E1	8034
SET	E2	971B
SET	E3	99FB
SET	E4	7EF1
SET	E5	90E8
SET	E6	5EE7
SET	E7	3DE3
SET	E8	7351
SET	E9	53ED	
SET	EA	56A2
SET	EB	DEA5
SET	EC	6C5A
SET	ED	835F
SET	EE	7C67
SET	EF	EC86
SET	F0	BD89
SET	F1	969C
SET	F2	5F63
SET	F3	72D7
SET	F4	959f
SET	F5	6081
SET	F6	4C67
SET	F7	7E12
SET	F8	9FC4
SET	F9	B11C
SET	FA	623D
SET	FB	8832
SET	FC	78EA
SET	FD	9F74
SET	FE	7044
SET	FF	BFB0	

	;VARIABLES
SET	D0	00E0	;ADDRESS TO START OF DATA TO SORT
SET	D3	0001	;JUST A ONE
SET	D5	0000	;JUST A ZERO
SET	D6	00FF	;END OF DATA TO SORT
SET	D7	0002	;JUST A TWO

INIT:
LOAD	G0	D0	;LOAD STARTADRESS TO G0
STORE	G0	D1	;STORE STARTADRESS ON D1
LOAD	G0	D3	;LOAD 1 TO G0
STORE	G0	D4	;LISTA SORTERAD=1

START:
LOAD	G0	D1	;G0=ADDR
ADD	G0	D3	;G0=G0+1
STORE	G0	D2	;G2=STARTADRESS+1

LOOP:
LOAD	G0	@D1	;LOAD ONE VALUE TO COMPARE TO G0
CMP	G0	@D2	;COMPARE G0 AND @D2
BGE	SWAP		;IF THEY G0>=@D2 JUMP TO SWAP

NEXT_LOOP:
LOAD	G0	D2	;G0=ADDR+1
STORE	G0	D1	;ADDR=ADDR+1
CMP	G0	D6	;ADDR==FF
BEQ	END
BRA	START

END:
LOAD	G0	D3	;G0=1
CMP	G0	D4	;LISTA_SORTED==1
BEQ	QUIT
BRA	INIT

QUIT:
HALT

SWAP:
LOAD	G0	@D1
LOAD	G1	@D2
STORE	G0	@D2
STORE	G1	@D1
LOAD	G0	D5
STORE	G0	D4
BRA	NEXT_LOOP



